
```` This file provides Postman interview preparation content in a Question & Answer format.````

================================================================================
Q) What is Postman, and why is it used?
Ans.) Postman is an API development tool that helps users create, send, and test HTTP requests. It simplifies the process of API testing and allows for easy collaboration among team members.
================================================================================
Q) How do you create a request in Postman?
Ans.) To create a request, open Postman, select the request type (GET, POST, etc.), enter the URL, and add any headers or body data as needed. Then, click the "Send" button to execute the request.
================================================================================
Q) What are Collections in Postman?
Ans.) Collections are groups of requests that can be organized for better management. They allow users to save APIs, organize requests, and share them with team members easily.
================================================================================
Q) How can you handle environment variables in Postman?
Ans.) Environment variables can be created to store values like API keys or endpoint URLs. They can be set under the "Manage Environments" option and can be referenced using the syntax `{{variableName}}` in requests.
================================================================================
Q) What are Tests in Postman?
Ans.) Tests are JavaScript code snippets that run after a request is sent to validate the response. They can check for response status, response time, and specific data in the response body.
================================================================================
Q) How do you run tests in Postman?
Ans.) Tests are executed automatically after a request is sent. You write the test scripts in the "Tests" tab of the request, and the results will be displayed in the "Test Results" section after the request completes.
================================================================================
Q) What is the Collection Runner in Postman?
Ans.) The Collection Runner allows users to run all requests in a collection sequentially. It is useful for testing multiple APIs and can be configured to run with different environments and data sets.
================================================================================
Q) Can you explain the difference between Pre-request Scripts and Tests in Postman?
Ans.) Pre-request Scripts are code snippets that run before a request is sent, allowing you to set up variables or conditions. Tests run after the response is received to validate outcomes based on the response data.
================================================================================
Q) How do you document an API in Postman?
Ans.) APIs can be documented in Postman by adding descriptions to requests, parameters, and responses. You can also generate a shareable documentation link from the collection which includes all details.
================================================================================
Q) What is Newman, and how is it related to Postman?
Ans.) Newman is a command-line tool that allows users to run Postman collections directly from the CLI. It is useful for integrating Postman tests in CI/CD pipelines to automate API testing.
================================================================================
Q) How does Postman handle variable scopes?
Ans.) Postman supports various variable scopes: global variables (available throughout all requests), environment variables (specific to an environment), collection variables (used within a collection), and local variables (only for the specific request).
================================================================================
Q) How can we save API responses to a file in Postman?
Ans.) API responses can be saved by clicking the download button in the response section or by using the "Send and Download" option, which prompts you to save the response after execution.
================================================================================
Q) Why is saving work in Postman Cloud not recommended?
Ans.) It is generally discouraged to save work in Postman Cloud due to concerns about confidentiality and security risks, especially for sensitive company data. It's better to use a team workspace for collaborative projects.
================================================================================
Q) List of all methods of pm. object
Ans.) In Postman, the `pm` object provides several methods and properties that are useful for testing and manipulating requests and responses. Here is a list of important `pm` methods:

1. pm.response:
    Accesses the response object, allowing you to inspect the response properties.
    Example: pm.response.json() retrieves the response body as JSON.

2. pm.test:
    Used to define a test case and validates conditions on the response.
    Example: pm.test("Status code is 200", function () { pm.response.to.have.status(200); });

3. pm.request:
    Accesses the request object, allowing inspection of request details (headers, body, etc.).
    Example: pm.request.url retrieves the URL of the current request.

4. pm.environment:
    Provides methods to manage environment variables.
    Example: pm.environment.set("token", "yourtokenhere"); sets an environment variable.

5. pm.collectionVariables:
    Used to manage collection-level variables.
    Example: pm.collectionVariables.get("variable_name"); retrieves a collection variable.

6. pm.globals:
    Accesses global variables in Postman.
    Example: pm.globals.set("globalVariable", "value"); sets a global variable.
================================================================================